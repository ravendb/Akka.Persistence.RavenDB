akka.persistence {
	journal {
		ravendb {
			# Qualified type name of the RavenDB persistence journal actor
			class = "Akka.Persistence.RavenDb.Journal.RavenDbJournal, Akka.Persistence.RavenDb"

			# Dispatcher used to drive journal actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

			# URLs to the ravendb cluster
			urls = ["http://localhost:8080"]
		
			# Database name where journal events will be stored
			name = "AkkaStorage"
			
			# Create the database if it doesn't exist
			auto-initialize = false

			# Location of a client certificate to access a secure RavenDB database.
			# If a password is required, it should be stored in the `RAVEN_CERTIFICATE_PASSWORD` env variable.
			#certificate-path = "\\path\\to\\cert.pfx"

			# Timeout for 'save' requests sent to RavenDB, such as writing or deleting
			# as opposed to stream operations which may take longer and have a different timeout (12h).
			# Client will fail requests that take longer than this.
			# default: 30s
			#save-changes-timeout = 30s

			# Http version for the RavenDB client to use in communication with the server
			# default: 2.0
			#http-version = "2.0"

			# Determines whether to compress the data sent in the client-server TCP communication
			# default: false
			#disable-tcp-compression = false
		}
	}
	
	snapshot-store {
		ravendb {
			# Qualified type name of the RavenDB persistence snapshot actor
			class = "Akka.Persistence.RavenDb.Snapshot.RavenDbSnapshotStore, Akka.Persistence.RavenDb"

			# Dispatcher used to drive snapshot storage actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

			# URLs to the ravendb cluster
			urls = ["http://localhost:8080"]
		
			# Database name where snapshots will be stored
			name = "AkkaStorage"
			
			# Create the database if it doesn't exist
			auto-initialize = false

			# Location of a client certificate to access a secure RavenDB database.
			# If a password is required, it should be stored in the `RAVEN_CERTIFICATE_PASSWORD` env variable.
			#certificate-path = "\\path\\to\\cert.pfx"

			# Timeout for 'save' requests sent to RavenDB, such as writing or deleting
			# as opposed to stream operations which may take longer and have a different timeout (12h).
			# Client will fail requests that take longer than this.
			# default: 30s
			#save-changes-timeout = 30s

			# Http version for the RavenDB client to use in communication with the server
			# default: 2.0
			#http-version = "2.0"

			# Determines whether to compress the data sent in the client-server TCP communication
			# default: false
			#disable-tcp-compression = false
		}
	}

	query {
        ravendb {
            # Implementation class of the EventStore ReadJournalProvider
            class = "Akka.Persistence.RavenDb.Query.RavenDbReadJournalProvider, Akka.Persistence.RavenDb"

            # The interval at which to check for new ids/events
			# default: 3s
            #refresh-interval = 3s
  
            # The number of events to keep buffered while querying until they are delivered downstream.
			# default: 65536
            #max-buffer-size = 65536
        }
    }
}